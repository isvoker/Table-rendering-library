const libraryRenderingForm = (function () {
	'use strict';

	const tableBodyPlaceholder = 'Тут пока нет ни одной записи';

	function loadRows(options) {
		const tableBody = options.tableProperties.container.querySelector('.proposals_table');

		Sensei.xhr({
			data: options.controllerParams,

			onBeforeSend: () => {
				Sensei.blockIt(tableBody);
			},
			onComplete: () => {
				Sensei.unblockIt(tableBody);
			},
			onSuccess: (response) => {
				checkBtnLoadMore(response, options);
				addRowsToTable(response.rows, options);

				if (options.tableProperties.hasOwnProperty('loadAfter')) {
					options.tableProperties.loadAfter(response);
				}
			}
		});
	}

	function checkBtnLoadMore(response, options) {
		if (
			options.tableProperties.hasOwnProperty('checkBtnLoadAll')
			&& response.thereMoreEntries
		) {
			Sensei.hide(
				document.getElementById('proposal-log__load-all')
			);
			return;
		}

		if (!options.tableProperties.btnLoadMore) {
			return;
		}
		const btnLoadMore = options.tableProperties.container.querySelector('.load-more-btn');

		if (response.thereMoreEntries) {
			Sensei.hide(btnLoadMore);
		} else {
			Sensei.show(btnLoadMore);
		}

		btnLoadMore.addEventListener('click', (event) => {
			Sensei.ignoreEvent(event);

			options.controllerParams.page++;
			options.tableProperties.clearTable = false;
			loadRows(options);
		});
	}

	function clearTable(options) {
		options.tableProperties.container.querySelector('.proposals_table').innerText = '';
	}

	function buildTable(options) {
		fillTableContainer(options);
		addHeaderToTable(options);
	}

	function fillTableContainer(options) {
		const tableEl = options.tableProperties.container;

		let header_html = '<div class="styled-table__shell ta-c"></div>';

		let body_html = `<div class="styled-table__rows proposals_table">
			<div class="styled-table__placeholder">${tableBodyPlaceholder}</div>
		</div>`;

		tableEl.innerHTML += header_html + body_html;

		if (options.tableProperties.btnLoadMore) {
			tableEl.innerHTML +=
			'<div class="flex jc-c">' +
				'<a class="load-more-btn hidden-el js__more_rows" data-page="1" href="#">Загрузить больше</a>' +
			'</div>';
		}
	}

	function addHeaderToTable(options) {
		const headerContainer = options.tableProperties.container.querySelector('.styled-table__shell');

		let header_html = '<div class="styled-table__heading container flex ai-c">';

		options.tableProperties.columns.forEach((column) => {
			header_html += `<div class="styled-table__heading_item" style="width:${column.width}">${column.title}</div>`;
		});
		headerContainer.innerHTML = header_html + '</div>';
	}

	function addRowsToTable(rows, options) {
		const tableProperties = options.tableProperties;
		const tableBody = tableProperties.container.querySelector('.proposals_table');

		if (tableProperties.clearTable) {
			clearTable(options);
			if (rows.length < 1) {
				tableBody.innerHTML = `<div class="styled-table__placeholder">${tableBodyPlaceholder}</div>`;
			}
		}

		rows.forEach((row) => {
			let rowInnerHtml = '';

			tableProperties.columns.forEach((column) => {
				let cellHtml = `<div class="styled-table__cell" style="width:${column.width}">`;

				if (column.hasOwnProperty('cellBuilder')) {
					cellHtml += column.cellBuilder(row);
				} else {
					cellHtml += row[column.field];
				}
				cellHtml += '</div>';

				rowInnerHtml += cellHtml;
			});

			tableBody.innerHTML += tableProperties.rowBuilder(rowInnerHtml, row);
		});
	}

	return {
		buildTable: buildTable,
		clearTable: clearTable,
		loadRows: loadRows
	};
}());
